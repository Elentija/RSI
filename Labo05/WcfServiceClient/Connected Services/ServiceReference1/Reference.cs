//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISpaceX")]
    public interface ISpaceX {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ISpaceX/GetCompanyInfo", ReplyAction="http://tempuri.org/ISpaceX/GetCompanyInfoResponse")]
        string GetCompanyInfo();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ISpaceX/GetCompanyInfo", ReplyAction="http://tempuri.org/ISpaceX/GetCompanyInfoResponse")]
        System.Threading.Tasks.Task<string> GetCompanyInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ISpaceX/GetLaunches", ReplyAction="http://tempuri.org/ISpaceX/GetLaunchesResponse")]
        string GetLaunches();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ISpaceX/GetLaunches", ReplyAction="http://tempuri.org/ISpaceX/GetLaunchesResponse")]
        System.Threading.Tasks.Task<string> GetLaunchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ISpaceX/Pomnoz", ReplyAction="http://tempuri.org/ISpaceX/PomnozResponse")]
        double Pomnoz(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ISpaceX/Pomnoz", ReplyAction="http://tempuri.org/ISpaceX/PomnozResponse")]
        System.Threading.Tasks.Task<double> PomnozAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ISpaceX/Sumuj", ReplyAction="http://tempuri.org/ISpaceX/SumujResponse")]
        double Sumuj(double n1);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ISpaceX/Sumuj", ReplyAction="http://tempuri.org/ISpaceX/SumujResponse")]
        System.Threading.Tasks.Task<double> SumujAsync(double n1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpaceXChannel : WcfServiceClient.ServiceReference1.ISpaceX, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpaceXClient : System.ServiceModel.ClientBase<WcfServiceClient.ServiceReference1.ISpaceX>, WcfServiceClient.ServiceReference1.ISpaceX {
        
        public SpaceXClient() {
        }
        
        public SpaceXClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpaceXClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpaceXClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpaceXClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetCompanyInfo() {
            return base.Channel.GetCompanyInfo();
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyInfoAsync() {
            return base.Channel.GetCompanyInfoAsync();
        }
        
        public string GetLaunches() {
            return base.Channel.GetLaunches();
        }
        
        public System.Threading.Tasks.Task<string> GetLaunchesAsync() {
            return base.Channel.GetLaunchesAsync();
        }
        
        public double Pomnoz(double n1, double n2) {
            return base.Channel.Pomnoz(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> PomnozAsync(double n1, double n2) {
            return base.Channel.PomnozAsync(n1, n2);
        }
        
        public double Sumuj(double n1) {
            return base.Channel.Sumuj(n1);
        }
        
        public System.Threading.Tasks.Task<double> SumujAsync(double n1) {
            return base.Channel.SumujAsync(n1);
        }
    }
}
