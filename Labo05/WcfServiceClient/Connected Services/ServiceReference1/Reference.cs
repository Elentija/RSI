//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IKalkulator")]
    public interface IKalkulator {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IKalkulator/Dodaj", ReplyAction="http://tempuri.org/IKalkulator/DodajResponse")]
        double Dodaj(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IKalkulator/Dodaj", ReplyAction="http://tempuri.org/IKalkulator/DodajResponse")]
        System.Threading.Tasks.Task<double> DodajAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IKalkulator/Odejmij", ReplyAction="http://tempuri.org/IKalkulator/OdejmijResponse")]
        double Odejmij(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IKalkulator/Odejmij", ReplyAction="http://tempuri.org/IKalkulator/OdejmijResponse")]
        System.Threading.Tasks.Task<double> OdejmijAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IKalkulator/Pomnoz", ReplyAction="http://tempuri.org/IKalkulator/PomnozResponse")]
        double Pomnoz(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IKalkulator/Pomnoz", ReplyAction="http://tempuri.org/IKalkulator/PomnozResponse")]
        System.Threading.Tasks.Task<double> PomnozAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IKalkulator/Sumuj", ReplyAction="http://tempuri.org/IKalkulator/SumujResponse")]
        double Sumuj(double n1);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IKalkulator/Sumuj", ReplyAction="http://tempuri.org/IKalkulator/SumujResponse")]
        System.Threading.Tasks.Task<double> SumujAsync(double n1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKalkulatorChannel : WcfServiceClient.ServiceReference1.IKalkulator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KalkulatorClient : System.ServiceModel.ClientBase<WcfServiceClient.ServiceReference1.IKalkulator>, WcfServiceClient.ServiceReference1.IKalkulator {
        
        public KalkulatorClient() {
        }
        
        public KalkulatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KalkulatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KalkulatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KalkulatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Dodaj(double n1, double n2) {
            return base.Channel.Dodaj(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> DodajAsync(double n1, double n2) {
            return base.Channel.DodajAsync(n1, n2);
        }
        
        public double Odejmij(double n1, double n2) {
            return base.Channel.Odejmij(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> OdejmijAsync(double n1, double n2) {
            return base.Channel.OdejmijAsync(n1, n2);
        }
        
        public double Pomnoz(double n1, double n2) {
            return base.Channel.Pomnoz(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> PomnozAsync(double n1, double n2) {
            return base.Channel.PomnozAsync(n1, n2);
        }
        
        public double Sumuj(double n1) {
            return base.Channel.Sumuj(n1);
        }
        
        public System.Threading.Tasks.Task<double> SumujAsync(double n1) {
            return base.Channel.SumujAsync(n1);
        }
    }
}
